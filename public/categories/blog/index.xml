<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on Scratchpad</title>
    <link>http://y0gesh.com/categories/blog/</link>
    <description>Recent content in blog on Scratchpad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Feb 2022 11:00:00 +0530</lastBuildDate><atom:link href="http://y0gesh.com/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Journey from IP packet to DB row</title>
      <link>http://y0gesh.com/posts/journey-from-ip-to-db/</link>
      <pubDate>Sat, 19 Feb 2022 11:00:00 +0530</pubDate>
      
      <guid>http://y0gesh.com/posts/journey-from-ip-to-db/</guid>
      <description>This post walks though the birds eye view of how database engines function and work to store and read data. We will be focusing on Postgres as database and Java as the application language to interact with the DB.
Source of data/query The data generally originates in any backend application, here let&amp;rsquo;s consider a Java application. Data received from user is generally mapped to a Java object and thereon the object is mapped to a database relation using the Object Relation Mapping (ORM).</description>
    </item>
    
  </channel>
</rss>
